//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThinClient.CalculationShortestPath {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculationShortestPath.ICalculatorShortestPath")]
    public interface ICalculatorShortestPath {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorShortestPath/CalculateShortestPath", ReplyAction="http://tempuri.org/ICalculatorShortestPath/CalculateShortestPathResponse")]
        string[] CalculateShortestPath(string firstID, string secondID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorShortestPath/CalculateShortestPath", ReplyAction="http://tempuri.org/ICalculatorShortestPath/CalculateShortestPathResponse")]
        System.Threading.Tasks.Task<string[]> CalculateShortestPathAsync(string firstID, string secondID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorShortestPathChannel : ThinClient.CalculationShortestPath.ICalculatorShortestPath, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorShortestPathClient : System.ServiceModel.ClientBase<ThinClient.CalculationShortestPath.ICalculatorShortestPath>, ThinClient.CalculationShortestPath.ICalculatorShortestPath {
        
        public CalculatorShortestPathClient() {
        }
        
        public CalculatorShortestPathClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorShortestPathClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorShortestPathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorShortestPathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] CalculateShortestPath(string firstID, string secondID) {
            return base.Channel.CalculateShortestPath(firstID, secondID);
        }
        
        public System.Threading.Tasks.Task<string[]> CalculateShortestPathAsync(string firstID, string secondID) {
            return base.Channel.CalculateShortestPathAsync(firstID, secondID);
        }
    }
}
